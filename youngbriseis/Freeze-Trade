-- FreezeTrade UI v7.1 - Enhanced Version
-- Author: YoungBriseis & OpenAI Optimization
-- Features: Mobile-friendly layout, glowing effects, responsive design, player card, and more.

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local LocalPlayer = Players.LocalPlayer

-- MAIN GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FreezeTradeUI"
screenGui.IgnoreGuiInset = true
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
screenGui.Parent = CoreGui

-- UTILITY FUNCTION
local function make(class, props)
	local inst = Instance.new(class)
	for k,v in pairs(props) do inst[k] = v end
	return inst
end

-- BUTTON HOVER EFFECT
local function makeHoverButton(button)
	local originalColor = button.BackgroundColor3
	button.MouseEnter:Connect(function()
		button.BackgroundColor3 = originalColor:lerp(Color3.new(1, 1, 1), 0.2)
		button.TextSize = button.TextSize + 1
	end)
	button.MouseLeave:Connect(function()
		button.BackgroundColor3 = originalColor
		button.TextSize = button.TextSize - 1
	end)
end

-- SHADOWS AND ASPECT RATIO SUPPORT
local function addVisuals(target)
	make("UIStroke", {
		Parent = target,
		Color = Color3.fromRGB(0, 0, 0),
		Transparency = 0.7,
		Thickness = 3
	})
	make("UIGradient", {
		Parent = target,
		Color = ColorSequence.new{
			ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 200)),
			ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 120, 255))
		},
		Rotation = 45
	})
	make("UIAspectRatioConstraint", {
		Parent = target,
		AspectRatio = 1.25,
		DominantAxis = Enum.DominantAxis.Width
	})
end

-- You will find the rest of the updated script in the next part(s)...
-- This section sets up shadows, gradients, and aspect ratio compatibility for all main UI elements.
-- MAIN FRAME (resized, centered, added aspect constraint)
local mainFrame = make("Frame", {
	Parent = screenGui,
	Size = UDim2.new(0, 340, 0, 360),
	Position = UDim2.new(0.5, -170, 1, 0),
	BackgroundColor3 = Color3.fromRGB(30, 10, 40),
	BackgroundTransparency = 0.15,
	Visible = false,
	Active = true,
	Draggable = true
})
make("UICorner", {Parent = mainFrame, CornerRadius = UDim.new(0, 20)})
make("UIStroke", {Parent = mainFrame, Color = Color3.fromRGB(255, 0, 200), Thickness = 2, Transparency = 0.3})
make("UIAspectRatioConstraint", {Parent = mainFrame, AspectRatio = 0.94})

-- CREDIT TEXT
local credit = make("TextLabel", {
	Parent = mainFrame,
	Size = UDim2.new(1, 0, 0, 36),
	Position = UDim2.new(0, 0, 0, 4),
	Text = "MADE BY YOUNGBRISEIS",
	Font = Enum.Font.Arcade,
	TextSize = 18,
	TextColor3 = Color3.fromRGB(255, 255, 255),
	BackgroundTransparency = 1
})
make("UIStroke", {Parent = credit, Color = Color3.fromRGB(255, 80, 255), Thickness = 1.5, Transparency = 0.2})

-- LINE UNDER CREDIT
make("Frame", {
	Parent = mainFrame,
	Size = UDim2.new(0.85, 0, 0, 1),
	Position = UDim2.new(0.075, 0, 0, 40),
	BackgroundColor3 = Color3.fromRGB(255, 0, 200),
	BorderSizePixel = 0
})

-- AVATAR & INFO (bigger avatar)
local avatar = make("ImageLabel", {
	Parent = mainFrame,
	Size = UDim2.new(0, 90, 0, 90),
	Position = UDim2.new(0, 20, 0, 50),
	BackgroundTransparency = 1,
	Image = "rbxthumb://type=AvatarHeadShot&id=1&w=420&h=420"
})
make("UICorner", {Parent = avatar, CornerRadius = UDim.new(1, 0)})
make("UIStroke", {Parent = avatar, Color = Color3.fromRGB(255, 80, 255), Thickness = 2, Transparency = 0.15})

-- ADDITIONAL INFO TEXT LABELS
local function createInfoLabel(name, offset)
	return make("TextLabel", {
		Parent = mainFrame,
		Size = UDim2.new(0, 210, 0, 18),
		Position = UDim2.new(0, 120, 0, offset),
		BackgroundTransparency = 1,
		Text = name .. ": -",
		Font = Enum.Font.Code,
		TextColor3 = Color3.fromRGB(255, 160, 255),
		TextSize = 14,
		TextXAlignment = Enum.TextXAlignment.Left
	})
end

local usernameLabel = createInfoLabel("Username", 50)
local nicknameLabel = createInfoLabel("Nickname", 70)
local countryLabel = createInfoLabel("Country", 90)
local accountAge = createInfoLabel("Account Age", 110)

-- USERNAME INPUT (smaller)
local usernameBox = make("TextBox", {
	Parent = mainFrame,
	Size = UDim2.new(0, 180, 0, 32),
	Position = UDim2.new(0.5, -110, 0, 140),
	Text = "Target Username",
	Font = Enum.Font.Gotham,
	TextSize = 14,
	TextColor3 = Color3.fromRGB(255, 255, 255),
	BackgroundColor3 = Color3.fromRGB(60, 20, 80),
	ClearTextOnFocus = true
})
make("UICorner", {Parent = usernameBox, CornerRadius = UDim.new(0, 6)})
make("UIStroke", {Parent = usernameBox, Color = Color3.fromRGB(255, 100, 255), Transparency = 0.5})

local goButton = make("TextButton", {
	Parent = mainFrame,
	Size = UDim2.new(0, 50, 0, 32),
	Position = UDim2.new(0.5, 80, 0, 140),
	Text = "GO",
	Font = Enum.Font.GothamBold,
	TextSize = 14,
	TextColor3 = Color3.fromRGB(255, 255, 255),
	BackgroundColor3 = Color3.fromRGB(255, 0, 200)
})
make("UICorner", {Parent = goButton, CornerRadius = UDim.new(0, 6)})
make("UIStroke", {Parent = goButton, Color = Color3.fromRGB(255, 0, 200), Thickness = 1.2, Transparency = 0.2})

-- Dropdown remains same (will apply layout fix & style in part 3)-- CENTERED CONTROL BUTTONS
local buttonNames = {
    {Text = "Force Accept", Callback = function() print("Force Accept Triggered") end},
    {Text = "Freeze Screen", Callback = function() print("Freeze Triggered") end},
    {Text = "Open Tools", Callback = function() print("Tools Opened") end},
}

for i, data in ipairs(buttonNames) do
    local button = make("TextButton", {
        Parent = mainFrame,
        Size = UDim2.new(0.8, 0, 0, 30),
        Position = UDim2.new(0.1, 0, 0, 180 + (i-1)*40),
        Text = data.Text,
        Font = Enum.Font.GothamBold,
        TextSize = 16,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        BackgroundColor3 = Color3.fromRGB(80, 10, 100)
    })
    make("UICorner", {Parent = button, CornerRadius = UDim.new(0, 6)})
    make("UIStroke", {Parent = button, Color = Color3.fromRGB(255, 100, 255), Thickness = 2, Transparency = 0.15})
    make("UIGradient", {Parent = button, Rotation = 45})
    makeHoverButton(button)
    button.MouseButton1Click:Connect(data.Callback)
end

-- LOADING SCREEN
local loadingFrame = make("Frame", {
    Parent = screenGui,
    Size = UDim2.new(1, 0, 1, 0),
    BackgroundColor3 = Color3.fromRGB(10, 0, 20),
    ZIndex = 10
})
local loadingLabel = make("TextLabel", {
    Parent = loadingFrame,
    Size = UDim2.new(1, 0, 0, 60),
    Position = UDim2.new(0, 0, 0.5, -30),
    Font = Enum.Font.GothamBlack,
    TextSize = 24,
    TextColor3 = Color3.fromRGB(255, 0, 255),
    BackgroundTransparency = 1,
    Text = "LOADING..."
})

-- ROTATING ANALYTICS MESSAGES
local analyticsTexts = {
    "BOOTING FREEZETRADE v7.1...",
    "SYNCHRONIZING WITH PROXY...",
    "PARSING SERVER TOPOLOGY...",
    "ANALYZING CLIENT LATENCY...",
    "LOADING PLAYER SCRIPTS...",
    "VERIFYING ENCRYPTION...",
    "CHECKING GEOLOCATION...",
    "INITIALIZING UI PIPELINE...",
    "FETCHING ACCOUNT DATA...",
    "CALIBRATING MEMORY..."
}

task.spawn(function()
    for i = 1, 25 do
        loadingLabel.Text = analyticsTexts[(i % #analyticsTexts) + 1]
        task.wait(0.35)
    end
    loadingFrame:Destroy()
    mainFrame.Visible = true
end)

-- PLAYER INFO FETCH (mock)
local function updatePlayerInfo(playerName)
    local target = Players:FindFirstChild(playerName)
    if target then
        avatar.Image = string.format("rbxthumb://type=AvatarHeadShot&id=%s&w=420&h=420", target.UserId)
        usernameLabel.Text = "Username: " .. target.Name
        nicknameLabel.Text = "Nickname: " .. (target.DisplayName or "-")
        countryLabel.Text = "Country: [Mock: US]" -- Placeholder; real IP data is not exposed to clients
        accountAge.Text = "Account Age: " .. target.AccountAge
    else
        usernameLabel.Text = "Username: N/A"
        nicknameLabel.Text = "Nickname: N/A"
        countryLabel.Text = "Country: -"
        accountAge.Text = "Account Age: -"
    end
end

goButton.MouseButton1Click:Connect(function()
    local name = usernameBox.Text
    if name and name ~= "" then
        updatePlayerInfo(name)
    end
end)
